" Build options {{{ "
let s:root = expand('<sfile>:h').'/'
"let &makeprg="cmake --build build -j8"

" Cmake
"let g:cmake_install_prefix
let g:cmake_build_type = "Debug"
let g:cmake_cxx_compiler = "custom_compiler"
let g:cmake_c_compiler = "custom_compiler"
let g:cmake_usr_args = "-DCUSTOM_ARGS=ON"
let g:make_arguments = "-j8"

" find alternatives
let g:alternateSearchPath = 'sfr:path,sfr:anothe_path'

" find custim code checks
let g:ale_cpp_cpplint_executable = './scripts/cpplint.py'
let g:ale_cpp_cpplint_options = '--linelength=160 --counting=detailed --filter="-readability/fn_size,-runtime/explicit"'

" YCM config
let g:ycm_extra_conf_globlist = ['./*']

" clear all the items
call g:quickmenu#reset()

call g:quickmenu#header(“TEST Project”)

call g:quickmenu#append('# Run', '')

call g:quickmenu#append(‘Example’, ‘!./bin/app_with_args -a ss -c bb’, ‘Run example’)

call g:quickmenu#append('# Debug', '')

call g:quickmenu#append(‘Example’, ‘ConqueGdb -d '.s:root.’bin/ —args ./bin/app_with_args -a ss -c bb’, ‘Debug example’)
